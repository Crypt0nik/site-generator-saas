#!/bin/bash

echo "üéØ TEST UTILISATEUR FINAL - Site Generator SAAS"
echo "=============================================="

# Simulation d'un utilisateur cr√©ant un site
echo ""
echo "üë§ Simulation: Un utilisateur veut cr√©er 'Ma Super Boutique'"
echo ""

# Configuration utilisateur
USER_CONFIG='{
  "name": "Ma Super Boutique",
  "primaryColor": "#10B981",
  "secondaryColor": "#059669", 
  "accentColor": "#F59E0B",
  "template": "e-commerce",
  "features": {
    "auth": true,
    "payment": true,
    "blog": true,
    "analytics": true
  }
}'

echo "üìã Configuration choisie:"
echo "$USER_CONFIG" | jq '.'

echo ""
echo "üöÄ 1. G√©n√©ration du script d'installation..."

# Appel API pour g√©n√©rer le script
response=$(curl -s -X POST http://localhost:3001/api/generator/generate \
  -H "Content-Type: application/json" \
  -d "$USER_CONFIG")

echo "R√©ponse serveur: $response"

# V√©rifier le succ√®s
success=$(echo $response | jq -r '.success')
if [ "$success" = "true" ]; then
    filename=$(echo $response | jq -r '.filename')
    echo "‚úÖ Script g√©n√©r√©: $filename"
    
    echo ""
    echo "üì• 2. T√©l√©chargement du script..."
    
    # T√©l√©charger dans un dossier temporaire
    temp_dir="/tmp/site-test-$(date +%s)"
    mkdir -p "$temp_dir"
    
    curl -o "$temp_dir/$filename" "http://localhost:3001/api/generator/download/$filename"
    
    if [ -f "$temp_dir/$filename" ]; then
        echo "‚úÖ Script t√©l√©charg√© dans: $temp_dir/$filename"
        
        # Rendre ex√©cutable
        chmod +x "$temp_dir/$filename"
        
        echo ""
        echo "üìÑ 3. V√©rification du contenu personnalis√©..."
        
        # V√©rifier que la personnalisation est pr√©sente
        if grep -q "Ma Super Boutique" "$temp_dir/$filename"; then
            echo "‚úÖ Nom personnalis√© trouv√©"
        else
            echo "‚ùå Nom personnalis√© manquant"
        fi
        
        if grep -q "#10B981" "$temp_dir/$filename"; then
            echo "‚úÖ Couleur primaire personnalis√©e trouv√©e"
        else
            echo "‚ùå Couleur primaire manquante"
        fi
        
        if grep -q "e-commerce" "$temp_dir/$filename"; then
            echo "‚úÖ Template e-commerce configur√©"
        else
            echo "‚ùå Template manquant"
        fi
        
        echo ""
        echo "üß™ 4. Test de validation bash..."
        
        if bash -n "$temp_dir/$filename"; then
            echo "‚úÖ Syntaxe bash valide"
        else
            echo "‚ùå Erreur de syntaxe bash"
        fi
        
        echo ""
        echo "üìä 5. Statistiques du script g√©n√©r√©:"
        echo "====================================="
        file_size=$(wc -c < "$temp_dir/$filename")
        line_count=$(wc -l < "$temp_dir/$filename")
        word_count=$(wc -w < "$temp_dir/$filename")
        
        echo "‚Ä¢ Taille: $file_size octets"
        echo "‚Ä¢ Lignes: $line_count"
        echo "‚Ä¢ Mots: $word_count"
        
        # Afficher un extrait avec la configuration
        echo ""
        echo "üìã 6. Configuration dans le script:"
        echo "=================================="
        grep -A 15 "config/brand.php" "$temp_dir/$filename" | head -20
        
        echo ""
        echo "üéâ TEST UTILISATEUR R√âUSSI!"
        echo "=========================="
        echo "‚úÖ L'utilisateur peut:"
        echo "   ‚Ä¢ Configurer son site via l'interface web"
        echo "   ‚Ä¢ G√©n√©rer un script d'installation personnalis√©"
        echo "   ‚Ä¢ T√©l√©charger le script automatiquement"
        echo "   ‚Ä¢ Ex√©cuter le script pour installer son site"
        echo ""
        echo "üìÅ Script de test disponible dans: $temp_dir"
        echo "üí° Pour tester l'installation compl√®te:"
        echo "   cd $temp_dir && ./$filename"
        
    else
        echo "‚ùå Erreur lors du t√©l√©chargement"
    fi
else
    echo "‚ùå Erreur lors de la g√©n√©ration"
fi

echo ""
echo "üìà Statistiques globales:"
echo "========================"

# Compter tous les scripts g√©n√©r√©s
total_scripts=$(find "/Users/arthur/projet pro/site-generator-saas/generated-packages" -name "*.sh" | wc -l)
echo "Scripts g√©n√©r√©s au total: $total_scripts"

# Taille totale des scripts
total_size=$(find "/Users/arthur/projet pro/site-generator-saas/generated-packages" -name "*.sh" -exec wc -c {} + | tail -1 | awk '{print $1}')
echo "Taille totale des scripts: $total_size octets"

# Test final des services
echo ""
echo "üîß √âtat des services:"
api_health=$(curl -s http://localhost:3001/health | jq -r '.status // "ERROR"')
echo "‚Ä¢ API: $api_health"

frontend_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3002)
echo "‚Ä¢ Frontend: $frontend_status"

echo ""
echo "üéØ Test utilisateur final termin√©!"
